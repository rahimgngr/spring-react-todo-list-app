{"ast":null,"code":"var _jsxFileName = \"/home/rahimgng/vscode/todo-list/src/comps/ListTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport axios from \"axios\"; // LISTING TASKS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListTodo() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useMemo(() => {\n    async function getData() {\n      await axios.get(\"http://localhost:8080/todos\").then(res => setData(res.data));\n    }\n\n    console.log(\"dsasade\");\n    getData();\n  }, [data]);\n\n  const toggleIsCompleted = (id, completed) => {\n    putData({\n      id,\n      data: {\n        completed\n      }\n    });\n  };\n\n  const putData = async _ref => {\n    let {\n      id,\n      data\n    } = _ref;\n    const res = await axios.put(`http://localhost:8080/todos/task/${id}`, data);\n    return res.data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: i.todoSubEntities.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: item.completed,\n          onChange: () => toggleIsCompleted(item.taskId, !item.completed)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), item.completed ? /*#__PURE__*/_jsxDEV(\"strike\", {\n          children: i.title + \" *** \" + item.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this) : i.title + \" *** \" + item.task]\n      }, item.taskId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, i.titleId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListTodo, \"5Q1JfhBXcCRpIK5YI0nmEmzObSg=\");\n\n_c = ListTodo;\nexport default ListTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodo\");","map":{"version":3,"sources":["/home/rahimgng/vscode/todo-list/src/comps/ListTodo.js"],"names":["React","useEffect","useState","useMemo","axios","ListTodo","data","setData","getData","get","then","res","console","log","toggleIsCompleted","id","completed","putData","put","map","i","todoSubEntities","item","taskId","title","task","titleId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,OAAO,CAAC,MAAM;AACZ,mBAAeK,OAAf,GAAyB;AACvB,YAAMJ,KAAK,CACRK,GADG,CACC,6BADD,EAEHC,IAFG,CAEGC,GAAD,IAASJ,OAAO,CAACI,GAAG,CAACL,IAAL,CAFlB,CAAN;AAGD;;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAL,IAAAA,OAAO;AACR,GARM,EAQJ,CAACF,IAAD,CARI,CAAP;;AAUA,QAAMQ,iBAAiB,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AAC3CC,IAAAA,OAAO,CAAC;AAAEF,MAAAA,EAAF;AAAMT,MAAAA,IAAI,EAAE;AAAEU,QAAAA;AAAF;AAAZ,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAG,cAAwB;AAAA,QAAjB;AAAEF,MAAAA,EAAF;AAAMT,MAAAA;AAAN,KAAiB;AACtC,UAAMK,GAAG,GAAG,MAAMP,KAAK,CAACc,GAAN,CAAW,oCAAmCH,EAAG,EAAjD,EAAoDT,IAApD,CAAlB;AAEA,WAAOK,GAAG,CAACL,IAAX;AACD,GAJD;;AAMA,sBACE;AAAA,cACGA,IAAI,CAACa,GAAL,CAAUC,CAAD,iBACR;AAAA,gBACGA,CAAC,CAACC,eAAF,CAAkBF,GAAlB,CAAuBG,IAAD,iBACrB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,OAAO,EAAEA,IAAI,CAACN,SAFhB;AAGE,UAAA,QAAQ,EAAE,MAAMF,iBAAiB,CAACQ,IAAI,CAACC,MAAN,EAAc,CAACD,IAAI,CAACN,SAApB;AAHnC;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGM,IAAI,CAACN,SAAL,gBACC;AAAA,oBAASI,CAAC,CAACI,KAAF,GAAU,OAAV,GAAoBF,IAAI,CAACG;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADD,GAGCL,CAAC,CAACI,KAAF,GAAU,OAAV,GAAoBF,IAAI,CAACG,IAT7B;AAAA,SAASH,IAAI,CAACC,MAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH,OAAUH,CAAC,CAACM,OAAZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA7CQrB,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport axios from \"axios\";\n\n// LISTING TASKS\nfunction ListTodo() {\n  const [data, setData] = useState([]);\n\n  useMemo(() => {\n    async function getData() {\n      await axios\n        .get(\"http://localhost:8080/todos\")\n        .then((res) => setData(res.data));\n    }\n    console.log(\"dsasade\");\n    getData();\n  }, [data]);\n\n  const toggleIsCompleted = (id, completed) => {\n    putData({ id, data: { completed } });\n  };\n\n  const putData = async ({ id, data }) => {\n    const res = await axios.put(`http://localhost:8080/todos/task/${id}`, data);\n\n    return res.data;\n  };\n\n  return (\n    <div>\n      {data.map((i) => (\n        <div key={i.titleId}>\n          {i.todoSubEntities.map((item) => (\n            <li key={item.taskId}>\n              <input\n                type=\"checkbox\"\n                checked={item.completed}\n                onChange={() => toggleIsCompleted(item.taskId, !item.completed)}\n              />\n              {item.completed ? (\n                <strike>{i.title + \" *** \" + item.task}</strike>\n              ) : (\n                i.title + \" *** \" + item.task\n              )}\n            </li>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ListTodo;\n"]},"metadata":{},"sourceType":"module"}