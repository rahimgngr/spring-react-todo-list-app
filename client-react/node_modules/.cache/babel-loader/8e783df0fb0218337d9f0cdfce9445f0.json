{"ast":null,"code":"var _jsxFileName = \"/home/rahimgng/vscode/todo-list/src/comps/ListTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { DataGrid } from \"@mui/x-data-grid\"; // LISTING TASKS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListTodo() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(0);\n\n  async function getData() {\n    await axios.get(\"http://localhost:8080/todos\").then(res => setData(res.data));\n  }\n\n  useMemo(() => {\n    getData();\n  }, [count]);\n\n  const toggleIsCompleted = (id, completed) => {\n    putData({\n      id,\n      data: {\n        completed\n      }\n    });\n  };\n\n  const putData = async _ref => {\n    let {\n      id,\n      data\n    } = _ref;\n    const res = await axios.put(`http://localhost:8080/todos/task/${id}`, data);\n    setCount(count + 1);\n    return res.data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Total Days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), data.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: i.todoSubEntities.map(item => /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: item.completed,\n            onChange: () => toggleIsCompleted(item.taskId, !item.completed)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), item.completed ? /*#__PURE__*/_jsxDEV(\"strike\", {\n            children: i.title + \" *** \" + item.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this) : i.title + \" *** \" + item.task]\n        }, item.taskId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))\n    }, i.titleId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListTodo, \"w0Zr4w+j5AmaQnIgrvmNmq5Cq2s=\");\n\n_c = ListTodo;\nexport default ListTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodo\");","map":{"version":3,"sources":["/home/rahimgng/vscode/todo-list/src/comps/ListTodo.js"],"names":["React","useState","useMemo","axios","DataGrid","ListTodo","data","setData","count","setCount","getData","get","then","res","toggleIsCompleted","id","completed","putData","put","map","i","todoSubEntities","item","listStyleType","taskId","title","task","titleId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;;AAEA,iBAAeS,OAAf,GAAyB;AACvB,UAAMP,KAAK,CACRQ,GADG,CACC,6BADD,EAEHC,IAFG,CAEGC,GAAD,IAASN,OAAO,CAACM,GAAG,CAACP,IAAL,CAFlB,CAAN;AAGD;;AAEDJ,EAAAA,OAAO,CAAC,MAAM;AACZQ,IAAAA,OAAO;AACR,GAFM,EAEJ,CAACF,KAAD,CAFI,CAAP;;AAIA,QAAMM,iBAAiB,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB;AAC3CC,IAAAA,OAAO,CAAC;AAAEF,MAAAA,EAAF;AAAMT,MAAAA,IAAI,EAAE;AAAEU,QAAAA;AAAF;AAAZ,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAG,cAAwB;AAAA,QAAjB;AAAEF,MAAAA,EAAF;AAAMT,MAAAA;AAAN,KAAiB;AACtC,UAAMO,GAAG,GAAG,MAAMV,KAAK,CAACe,GAAN,CAAW,oCAAmCH,EAAG,EAAjD,EAAoDT,IAApD,CAAlB;AACAG,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,WAAOK,GAAG,CAACP,IAAX;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,OAAO,EAAC,MAAtC;AAAA,8BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAeGA,IAAI,CAACa,GAAL,CAAUC,CAAD,iBACR;AAAA,gBACGA,CAAC,CAACC,eAAF,CAAkBF,GAAlB,CAAuBG,IAAD,iBACrB;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAAX;AAAA,+BACE;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,OAAO,EAAED,IAAI,CAACN,SAFhB;AAGE,YAAA,QAAQ,EAAE,MACRF,iBAAiB,CAACQ,IAAI,CAACE,MAAN,EAAc,CAACF,IAAI,CAACN,SAApB;AAJrB;AAAA;AAAA;AAAA;AAAA,kBADF,EAQGM,IAAI,CAACN,SAAL,gBACC;AAAA,sBAASI,CAAC,CAACK,KAAF,GAAU,OAAV,GAAoBH,IAAI,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADD,GAGCN,CAAC,CAACK,KAAF,GAAU,OAAV,GAAoBH,IAAI,CAACI,IAX7B;AAAA,WAASJ,IAAI,CAACE,MAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH,OAAUJ,CAAC,CAACO,OAAZ;AAAA;AAAA;AAAA;AAAA,YADD,CAfH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GAhEQtB,Q;;KAAAA,Q;AAkET,eAAeA,QAAf","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\n// LISTING TASKS\nfunction ListTodo() {\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(0);\n\n  async function getData() {\n    await axios\n      .get(\"http://localhost:8080/todos\")\n      .then((res) => setData(res.data));\n  }\n\n  useMemo(() => {\n    getData();\n  }, [count]);\n\n  const toggleIsCompleted = (id, completed) => {\n    putData({ id, data: { completed } });\n  };\n\n  const putData = async ({ id, data }) => {\n    const res = await axios.put(`http://localhost:8080/todos/task/${id}`, data);\n    setCount(count + 1);\n    return res.data;\n  };\n\n  return (\n    <div>\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>Project Name</th>\n            <th>Start Date</th>\n            <th>End Date</th>\n            <th> Total Days</th>\n            <th>Progress</th>\n            <th>Actions</th>\n          </tr>\n          <tr></tr>\n        </thead>\n        <tbody></tbody>\n      </Table>\n      {data.map((i) => (\n        <div key={i.titleId}>\n          {i.todoSubEntities.map((item) => (\n            <ul style={{ listStyleType: \"none\" }}>\n              <li key={item.taskId}>\n                <input\n                  type=\"checkbox\"\n                  checked={item.completed}\n                  onChange={() =>\n                    toggleIsCompleted(item.taskId, !item.completed)\n                  }\n                />\n                {item.completed ? (\n                  <strike>{i.title + \" *** \" + item.task}</strike>\n                ) : (\n                  i.title + \" *** \" + item.task\n                )}\n              </li>\n            </ul>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ListTodo;\n"]},"metadata":{},"sourceType":"module"}